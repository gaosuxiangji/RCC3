<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="jsoncpp_redist_init;jsoncpp_redist_init_2">
  <PropertyGroup Label="Default initializers for properties">
    <Linkage-jsoncpp_redist Condition="'$(Linkage-jsoncpp_redist)' == ''">dynamic</Linkage-jsoncpp_redist>
    <CallingConvention-jsoncpp_redist Condition="'$(CallingConvention-jsoncpp_redist)' == ''">cdecl</CallingConvention-jsoncpp_redist>
  </PropertyGroup>
  <Target Name="jsoncpp_redist_init">
    <jsoncpp_redist_Contains Text="Linkage-dynamic" Library="jsoncpp_redist" Value="dynamic" Condition="'$(Linkage-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="Linkage-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="Linkage-static" Library="jsoncpp_redist" Value="static" Condition="'$(Linkage-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="Linkage-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="Linkage-ltcg" Library="jsoncpp_redist" Value="ltcg" Condition="'$(Linkage-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="Linkage-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="Linkage-sxs" Library="jsoncpp_redist" Value="sxs" Condition="'$(Linkage-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="Linkage-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="CallingConvention-cdecl" Library="jsoncpp_redist" Value="cdecl" Condition="'$(CallingConvention-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="CallingConvention-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="CallingConvention-stdcall" Library="jsoncpp_redist" Value="stdcall" Condition="'$(CallingConvention-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="CallingConvention-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="CallingConvention-fastcall" Library="jsoncpp_redist" Value="fastcall" Condition="'$(CallingConvention-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="CallingConvention-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="CallingConvention-thiscall" Library="jsoncpp_redist" Value="thiscall" Condition="'$(CallingConvention-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="CallingConvention-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
    <jsoncpp_redist_Contains Text="CallingConvention-clrcall" Library="jsoncpp_redist" Value="clrcall" Condition="'$(CallingConvention-jsoncpp_redist)'==''">
      <Output TaskParameter="Result" PropertyName="CallingConvention-jsoncpp_redist" />
    </jsoncpp_redist_Contains>
  </Target>
  <Target Name="jsoncpp_redist_init_2">
    <SetEnv Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) &gt; -1 )" Name="PATH" Prefix="true" Value="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Debug">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="PATH" />
    </SetEnv>
    <SetEnv Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) == -1 )" Name="PATH" Prefix="true" Value="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Release">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="PATH" />
    </SetEnv>
  </Target>
  <ItemGroup Label="x64 and dynamic and Debug" Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) &gt; -1 )">
    <None Include="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Debug\jsoncppd.dll" Condition="(('$(AppContainerApplication.ToLower())' == 'true')) OR (('$(TargetPlatformIdentifier.ToLower())' == 'windows phone' And '$(TargetPlatformVersion)' == '8.0'))">
      <DeploymentContent>true</DeploymentContent>
    </None>
  </ItemGroup>
  <ItemGroup Label="x64 and dynamic and Release" Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) == -1 )">
    <None Include="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Release\jsoncpp.dll" Condition="(('$(AppContainerApplication.ToLower())' == 'true')) OR (('$(TargetPlatformIdentifier.ToLower())' == 'windows phone' And '$(TargetPlatformVersion)' == '8.0'))">
      <DeploymentContent>true</DeploymentContent>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)\default-propertiesui.xml" />
  </ItemGroup>
  <Target Name="jsoncpp_redist_AfterBuild" AfterTargets="AfterBuild" />
  <Target Name="jsoncpp_redist_AfterBuild_x64_and_dynamic_and_Debug" Label="x64 and dynamic and Debug" Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) &gt; -1 )" AfterTargets="jsoncpp_redist_AfterBuild">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Debug\jsoncppd.dll" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="jsoncpp_redist_AfterBuild_x64_and_dynamic_and_Release" Label="x64 and dynamic and Release" Condition="'$(Platform.ToLower())' == 'x64' And '$(Linkage-jsoncpp_redist.ToLower())' == 'dynamic' And ( $(Configuration.ToLower().IndexOf('debug')) == -1 )" AfterTargets="jsoncpp_redist_AfterBuild">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)../..//build/native/bin/x64\dynamic\Release\jsoncpp.dll" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  <UsingTask TaskName="jsoncpp_redist_Contains" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" TaskFactory="CodeTaskFactory">
    <ParameterGroup>
      <Text Output="false" ParameterType="System.String" />
      <Library Output="false" Required="true" ParameterType="System.String" />
      <Value Output="false" Required="true" ParameterType="System.String" />
      <Result Output="true" ParameterType="System.String" />
    </ParameterGroup>
    <Task>
      <Code>Result = ((Text ?? "").Split(';').Contains(Library) ) ? Value : String.Empty;</Code>
    </Task>
  </UsingTask>
</Project>